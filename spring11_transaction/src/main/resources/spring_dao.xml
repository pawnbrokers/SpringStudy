<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--我们将dataSource配置到spring中，在这里我们使用spring提供的jdbc-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&amp;serverTimezone=UTC"></property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
    </bean>



    <!--sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--        绑定mtbatis配置文件,相当于将两个配置文件扩展起来-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--        <property name="mapperLocations" value="classpath:com/kuang/dao/*.xml"></property>-->
        <property name="mapperLocations" value="classpath:com/kuang/dao/UserMapper.xml"/>
        <!--        <property name="typeAliasesPackage" value="com.kuang.pojo"></property>-->
    </bean>


    <!--    就是我们使用的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <!--        只能通过构造器注入，因为没有set方法-->
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
    </bean>


    <bean id="userMapper" class="com.kuang.dao.UserMapperImpl">
        <constructor-arg name="sqlSession" ref="sqlSession"></constructor-arg>
    </bean>


    <!--    配置声明式事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--    结合AOP实现事务的织入-->
    <!--    配置事务的类-->
    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">

        <!--        给哪些方法配置事务，并设置传播特性-->
        <tx:attributes>
            <tx:method name="insertUsers" propagation="REQUIRED"/>
            <tx:method name="selectUsers" read-only="true"/>
            <tx:method name="deleteUsers"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--    配置事务切入-->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* com.kuang.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"></aop:advisor>
    </aop:config>

</beans>